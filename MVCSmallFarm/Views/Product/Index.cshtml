@model MVCSmallFarm.ViewModels.ProductCatViewModel

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link active" id="linkFirst"
           data-bs-toggle="tab" role="tab" href="#tabfirst"
           aria-controls="tabfirst" aria-selected="true">View All</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="linkSecond"
           data-bs-toggle="tab" role="tab" href="#tabsecond"
           aria-controls="tabsecond" aria-selected="false">Add New</a>
    </li>
</ul>

<div id="gfg" class="row">
    <div class="col-md-3"><div class="image"></div></div>
    <div class="col-md-9" id="loadmsg"></div>
</div>



        <div id="dialog-confirm"></div>


        <div class="tab-content">
            <div id="tabfirst" class="tab-pane fade show active">
                @*@await (Component.InvokeAsync<MVCSmallFarm.ViewComponents.ProductAllViewComponent>())*@
                @await Component.InvokeAsync("ProductAll", new { pgview = 1, flg = 1, Model })
            </div>

            <div id="tabsecond" class="tab-pane fade">

                <partial name="ProductAddEditView.cshtml" />

                @*@Html.Partial("PartialAddOrEdit", Model)*@
                @*@await Component.InvokeAsync("ProductAll", new { pgview = 2, flg = ViewBag.ID, Model })*@

            </div>
        </div>

        @section Scripts
{
            @{
                <partial name="_ValidationScriptsPartial" />
            }
            <script>
        jQuery(document).ready(function ($) {
            Loading(false);
        });

        function Loading(bools) {
            $("#gfg").dialog({
                autoOpen: bools,
                show: {
                    effect: "blind",
                    duration: 1000
                },
                hide: {
                    effect: "explode",
                    duration: 1000
                }
            });
            $(".ui-dialog-titlebar").hide();
        }

        async  function ReloadEventViewComponent() {
            var chk = 0;
            var ajaxConfig =  {
                type: 'GET',
                url: "@Url.Action("ReloadEventViewComponent", "Product")",
                data: {
                    pgview: 1,
                    flg: 1
                },
                success: function (data) {
                    $("#tabfirst").html(data);
                    //alert(data);
                }
            }

            $.ajax(ajaxConfig);

            await ResetTab(1);
        }

        async function ReloadProductAddEditViewComponent(id,edit) {
            if (edit.toLowerCase() == 'edit') {
                ResetTab(2);
            }

              var ajaxConfig =  {
                  type: 'GET',
                  url: "@Url.Action("ProductAddEditView", "Product")",
                  data: {
                      pgview: 2,
                      flg: id
                  },
                  success: function (data) {
                      $("#tabsecond").html(data);
                  }
              }
            await $.ajax(ajaxConfig);

            if (edit.toLowerCase() == 'reset') {
                ResetTab(3);
            }
        }

        function ResetTab(chk)
        {
            let el_down = document.getElementById("linkSecond");
            if (chk == 1) {
                //add
                el_down.innerHTML = "Add new";
                document.getElementById("linkFirst").click();
            } else if (chk == 2) {
                //edit
                el_down.innerHTML = "Edit";
                document.getElementById("linkSecond").click();
            } else {
                //reset
                el_down.innerHTML = "Add new";
                document.getElementById("linkFirst").click();
            }
        }




        // (view componentin tabsecond):Shared/Components/ProductAll/ProductAddEditView.cshtml  (A Form calls SubmitForm() and jQueryAjaxReset())
        function jQueryAjaxReset() {

            // var validator = $("#frm").validate(); //Not working
            //validator.resetForm();                //Not working
            //$(form).reset();                      //Not working
            //$(form).removeData("validator").removeData("unobtrusiveValidation");
            ReloadProductAddEditViewComponent(0, "reset");
        }


    function confirmSubmitJQ(id, msg, url,loadmsg) {

        checkfn(function () {
            //alert('success!');
            OpenBusyDialog(1, loadmsg);
            var chk = jQueryAjaxPostByID(id, url);
            setTimeout(
                function () {
                    ReloadEventViewComponent();
                }, 2000);
            OpenBusyDialog(0,"");

        }, function () {
            //alert('failure!');
        }, msg);

    }

    function checkfn(success, cancel,msg) {
        $.confirm({
            title: 'Confirm!',
            content:msg,
            buttons: {
                confirm: function () {
                    if (success) success();
                        var self = this;
                        self.close;
                },
                cancel: function () {
                    //  $.alert('Canceled!');
                    if (cancel) cancel();
                        var self = this;
                        self.close;
                }

            }
        });


        return true;
    }

    function OpenBusyDialog(chk,msg)
    {
        //var theDialog = $("#gfg").dialog(opt);
        //theDialog.dialog("open");

        if (chk == 1) {
            $("#loadmsg").text(msg);
            $("#gfg").dialog("open");
        } else {
            $("#loadmsg").text();
            $("#gfg").dialog("close");
        }

    }

        // (view componentin tabsecond):Shared/Components/ProductAll/ProductAddEditView.cshtml  (A Form calls SubmitForm() and jQueryAjaxReset())
        function SubmitForm(form) {

            $.validator.unobtrusive.parse(form);
            console.log("SubmitForm start validate");

            if ($(form).valid()) {

                var ajaxConfig = {
                    type: 'POST',
                    url: form.action,
                    data: new FormData(form),
                    //data: $(form).serialize(),
                    //dataType: "html",
                    success: function (response) {
                        if (response.success) {
                            OpenBusyDialog(1, "       Saving <br> Please wait.");

                            setTimeout(
                                function () {
                                    ReloadProductAddEditViewComponent(0, "reset");  // Code in View/Product/Index.cshtml
                                    ReloadEventViewComponent();                     // Code in View/Product/Index.cshtml
                                }, 2000
                            );

                            OpenBusyDialog(0, "");
                        } else {
                            //$.validator.unobtrusive.parse(form);
                            /*$("#tabsecond").html(response.FormData);*/
                            $("#tabsecond").html(response);
                           // $("#imgpreview").attr('src', 'data:image/png,image/jpeg;base64,' + response);
                        };
                    },
                    error: function (error) {
                        console.error(error);
                    }
                }

                if ($(form).attr('enctype') == "multipart/form-data") {
                    ajaxConfig['contentType'] = false;
                    ajaxConfig['processData'] = false;
                }
                $.ajax(ajaxConfig);

            }
            return false;
        }


            </script>

        }
